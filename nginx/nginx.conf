# /etc/nginx/nginx.conf

# helpful https://www.hostwinds.com/guide/live-streaming-from-a-vps-with-nginx-rtmp/

# supervisord can only handle processes in foreground. The default for nginx is running in background as daemon
daemon off;

user nginx;

worker_processes auto;

pcre_jit on;

error_log /var/log/nginx/error.log warn;

include /etc/nginx/modules/*.conf;

events {
	worker_connections 1024;
}

# server block

http {
	# Disable server tokens
	server_tokens off;

	# Include specific MIME types
	include /etc/nginx/mime.types;

	# set a timeout limit
	keepalive_timeout 65;

	gzip on;
	gzip_disable "msie6";
	types_hash_max_size 2048;

	default_type application/octet-stream;
	client_max_body_size 1m;
	sendfile on;
	tcp_nodelay on;
	#tcp_nopush on;
	#ssl_dhparam /etc/ssl/nginx/dh2048.pem;
	ssl_prefer_server_ciphers on;
	ssl_session_cache shared:SSL:2m;

	gzip_vary on;
	#gzip_static on;

	log_format compression '$remote_addr - $remote_user [$time_local] '
		'"$request" $status $body_bytes_sent '
		'"$http_referer" "$http_user_agent" "$gzip_ratio"';

	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
		'$status $body_bytes_sent "$http_referer" '
		'"$http_user_agent" "$http_x_forwarded_for"';

	server {
		gzip on;

		access_log /var/log/nginx/access.log compression;	
		# access_log /var/log/nginx/access.log main;	

		listen 80 default_server;		# HTTP IPv4
		listen [::]:80 default_server;		# HTTP IPv6
		# server_name kingdomhall.stream	# domain name
		#listen 443 ssl http2;	

		# serve HLS over HTTPS
		#ssl_certificate /etc/letsencrypt/live/live.streamcat.tv/fullchain.pem;
		#ssl_certificate_key /etc/letsencrypt/live/live.streamcat.tv/privkey.pem;

		# To add a permissions rule, add a line either within the server { } or a application { } block in the following format:

		# <allow OR deny> <publish OR play> <ip_address OR all>
		# allow publish 127.0.0.1;
		# deny publish all;	
		# allow play all;
		# deny play 10.0.0.253;
	
		location / {
			root  /var/www/live;
			index index.html index.htm;
		}

		location /live {
			alias /var/live/hls;
			types {
				application/vnd.apple.mpegurl m3u8;
				video/mp2t ts;
			}
		
		add_header Cache-Control no-cache;

		add_header Access-Control-Allow-Origin *;
		expires -1;
	}

	location /screenshot {
		root /var/live/hls;
	}
	
	location /stat {
		rtmp_stat all;
		rtmp_stat_stylesheet stat.xsl;
	}	
    
	location = /stat.xsl {
		root /var/www/static/stat.xml;
	}
	
	# location /nclients {
	#	proxy_pass http://localhost/stat.xml;
	#	rtmp_stat_stylesheet static/nclients.xsl;
	# }

	location /static {
		alias /var/www/static;
	}
	
	location /on_publish {
		return 201;
	}

	location = /404.html {
		internal;
	}
	  
	location /crossdomain.xml {
		default_type text/xml;
		return 200 '<?xml version="1.0"?>
		<!DOCTYPE cross-domain-policy SYSTEM "http://www.adobe.com/xml/dtds/cross-domain-policy.dtd">
		<cross-domain-policy>
			<site-control permitted-cross-domain-policies="all"/>				 
			<allow-access-from domain="*" secure="false"/>					 
			<allow-http-request-headers-from domain="*" headers="*" secure="false"/>					                
		</cross-domain-policy>';			
		expires 24h;
	}
	
	location /.well-known/acme-challenge {
		allow all;
		root /le-root;
		try_files $uri =404;
		break;
	}
	
	location /control {
		rtmp_control all;
	}

	error_page   500 502 503 504  /50x.html;

	location = /50x.html {
		root   html;
	}
	
    }
}

rtmp_auto_push on;

rtmp_auto_push_reconnect 1s;

rtmp {
	server {
		listen 1935;
		max_streams 32;
		chunk_size 4096;
		max_message 1M;
		ping 3s;
		ping_timeout 30s;

		# <allow OR deny> <publish OR play> <ip_address OR all>
		# allow publish 127.0.0.1;
		# deny publish all;	
		allow play all;
		# deny play 10.0.0.253;

		# this is the application: "live" - this forms our address as in rtmp://{server IP}/live
		application live {
   
			live on;
			sync 10s;
			on_publish http://localhost:80/on_publish;
			notify_method get;
			#max_connections 100;

			# push out other resolution streams (re-encode with ffmpeg)
			exec_push ffmpeg -i rtmp://localhost:1935/live/$name
			-c:a aac -b:a 128k -c:v libx264 -b:v 2500k -f flv -g 60 -r 60 -filter:v scale=1920:-1 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_1080p
			-c:a aac -b:a 128k -c:v libx264 -b:v 2500k -f flv -g 60 -r 60 -filter:v scale=1280:-1 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_720p
			-c:a aac -b:a 128k -c:v libx264 -b:v 1000k -f flv -g 30 -r 30 -filter:v scale=854:-1 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_480p;
    
			recorder screenshot {
				record keyframes;
				record_max_frames 4;
				record_interval 30s;
				record_path /var/live/hls;
				record_suffix .flv;
				record_unique off;


				exec_record_done ffmpeg -i rtmp://localhost:1935/live/$name
				-vcodec png -vframes 1 -an -f rawvideo -s 320x180 -ss 00:00:01 -y /var/live/hls/$name.png;
			}
	        }

	# stream video over the HTTP and HTTPS protocols
        application hls {
		live on;
		hls on;
		record off;
		hls_fragment_naming system;
		hls_fragment 2s;
		hls_playlist_length 10s;
		hls_sync 100ms;
		hls_path /var/live/hls;
		hls_nested on;
		hls_cleanup on;	

		hls_variant _1080p BANDWIDTH=2628000,RESOLUTION=1920x1080; 
		hls_variant _720p BANDWIDTH=2628000,RESOLUTION=1280x720;
		hls_variant _480p BANDWIDTH=1128000,RESOLUTION=854x480;
	}				

   }
}
